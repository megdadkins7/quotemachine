{"ast":null,"code":"import _slicedToArray from \"/Users/spectrumlighting/Documents/Sites/quote-machine/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _taggedTemplateLiteral from \"/Users/spectrumlighting/Documents/Sites/quote-machine/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"/Users/spectrumlighting/Documents/Sites/quote-machine/src/components/QuoteBox.js\";\n\nfunction _templateObject() {\n  const data = _taggedTemplateLiteral([\"\\n  ul {\\n    list-style: none;\\n  }\\n  .buttons {\\n    display: flex;\\n    justify-content: center;\\n  }\\n  #author {\\n    font-size: 12px;\\n    color: #414141;\\n    margin-left: 15px;\\n    font-style: italic;\\n  }\\n  #text {\\n    margin-bottom: -1px;\\n  }\\n\"]);\n\n  _templateObject = function () {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { useState, useEffect } from 'react';\nimport styled from 'styled-components';\nimport axios from 'axios';\nimport NewQuoteButton from './NewQuoteButton';\nimport TweetButton from './TweetButton';\nconst StyledQuoteBox = styled.div(_templateObject()); // {data.quotes.map((item, i) => (\n//   <Quotes key={`${item.author}${i}`} {...item} />\n// ))}\n// let data = res.data.quotes\n// let quoteNum = Math.floor(Math.random() * data.length) //quote number\n// let randomQuote = data[quoteNum] //actual quote\n// this.setState({\n//   quote: randomQuote['quote'],\n//   author: randomQuote['author']\n// })\n// getNewQuote = () => { //will be called on clicking the New Quote button\n//   this.getQuote()\n// }\n\nfunction QuoteBox() {\n  const _useState = useState({\n    quotes: []\n  }),\n        _useState2 = _slicedToArray(_useState, 2),\n        data = _useState2[0],\n        setData = _useState2[1];\n\n  useEffect(() => {\n    const fetchData = async () => {\n      const result = await axios('https://gist.githubusercontent.com/camperbot/5a022b72e96c4c9585c32bf6a75f62d9/raw/e3c6895ce42069f0ee7e991229064f167fe8ccdc/quotes.json');\n      setData(result.data);\n    };\n\n    fetchData();\n  }, []);\n\n  const getNewQuote = () => {};\n\n  return React.createElement(StyledQuoteBox, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    id: \"quote-wrapper\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    id: \"quote-box\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }, React.createElement(\"ul\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }, data.quotes.map((item, i) => React.createElement(\"li\", {\n    key: \"\".concat(item.author).concat(i),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    id: \"text\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }, item.quote), React.createElement(\"span\", {\n    id: \"author\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }, \" - \", item.author)))), React.createElement(\"div\", {\n    className: \"buttons\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }, React.createElement(TweetButton, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }), React.createElement(NewQuoteButton, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  })))));\n}\n\nexport default QuoteBox;","map":{"version":3,"sources":["/Users/spectrumlighting/Documents/Sites/quote-machine/src/components/QuoteBox.js"],"names":["React","useState","useEffect","styled","axios","NewQuoteButton","TweetButton","StyledQuoteBox","div","QuoteBox","quotes","data","setData","fetchData","result","getNewQuote","map","item","i","author","quote"],"mappings":";;;;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,OAAOC,cAAP,MAA2B,kBAA3B;AACA,OAAOC,WAAP,MAAwB,eAAxB;AAEA,MAAMC,cAAc,GAAGJ,MAAM,CAACK,GAAV,mBAApB,C,CAmBA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,SAASC,QAAT,GAAoB;AAAA,oBACMR,QAAQ,CAAC;AAAES,IAAAA,MAAM,EAAE;AAAV,GAAD,CADd;AAAA;AAAA,QACXC,IADW;AAAA,QACLC,OADK;;AAGlBV,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMW,SAAS,GAAG,YAAY;AAC5B,YAAMC,MAAM,GAAG,MAAMV,KAAK,CACxB,wIADwB,CAA1B;AAGAQ,MAAAA,OAAO,CAACE,MAAM,CAACH,IAAR,CAAP;AACD,KALD;;AAMAE,IAAAA,SAAS;AACV,GARQ,EAQN,EARM,CAAT;;AAUA,QAAME,WAAW,GAAG,MAAM,CAEzB,CAFD;;AAGA,SACE,oBAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,EAAE,EAAC,eAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,EAAE,EAAC,WAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACEJ,IAAI,CAACD,MAAL,CAAYM,GAAZ,CAAgB,CAACC,IAAD,EAAOC,CAAP,KACf;AAAI,IAAA,GAAG,YAAKD,IAAI,CAACE,MAAV,SAAmBD,CAAnB,CAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAG,IAAA,EAAE,EAAC,MAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAcD,IAAI,CAACG,KAAnB,CADF,EAEE;AAAM,IAAA,EAAE,EAAC,QAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAsBH,IAAI,CAACE,MAA3B,CAFF,CADD,CADF,CADF,EASE;AAAK,IAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE,oBAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CATF,CADF,CADF,CADF;AAoBD;;AAED,eAAeV,QAAf","sourcesContent":["import React, {useState, useEffect} from 'react'\nimport styled from 'styled-components'\nimport axios from 'axios'\n\nimport NewQuoteButton from './NewQuoteButton'\nimport TweetButton from './TweetButton'\n\nconst StyledQuoteBox = styled.div`\n  ul {\n    list-style: none;\n  }\n  .buttons {\n    display: flex;\n    justify-content: center;\n  }\n  #author {\n    font-size: 12px;\n    color: #414141;\n    margin-left: 15px;\n    font-style: italic;\n  }\n  #text {\n    margin-bottom: -1px;\n  }\n`;\n\n// {data.quotes.map((item, i) => (\n//   <Quotes key={`${item.author}${i}`} {...item} />\n// ))}\n\n// let data = res.data.quotes\n// let quoteNum = Math.floor(Math.random() * data.length) //quote number\n// let randomQuote = data[quoteNum] //actual quote\n// this.setState({\n//   quote: randomQuote['quote'],\n//   author: randomQuote['author']\n// })\n// getNewQuote = () => { //will be called on clicking the New Quote button\n//   this.getQuote()\n// }\n\nfunction QuoteBox() {\n  const [data, setData] = useState({ quotes: [] });\n\n  useEffect(() => {\n    const fetchData = async () => {\n      const result = await axios(\n        'https://gist.githubusercontent.com/camperbot/5a022b72e96c4c9585c32bf6a75f62d9/raw/e3c6895ce42069f0ee7e991229064f167fe8ccdc/quotes.json',\n      );\n      setData(result.data);\n    };\n    fetchData();\n  }, []);\n\n  const getNewQuote = () => {\n    \n  }\n  return (\n    <StyledQuoteBox>\n      <div id='quote-wrapper'>\n        <div id='quote-box'>\n          <ul>\n           {data.quotes.map((item, i) => (\n             <li key={`${item.author}${i}`}>\n               <p id='text'>{item.quote}</p>\n               <span id='author'> - {item.author}</span>\n             </li>\n           ))}\n          </ul>\n          <div className='buttons'>\n            <TweetButton />\n            <NewQuoteButton />\n          </div>\n        </div>\n      </div>\n    </StyledQuoteBox>\n  )\n}\n\nexport default QuoteBox"]},"metadata":{},"sourceType":"module"}