{"ast":null,"code":"import _slicedToArray from \"/Users/spectrumlighting/Documents/Sites/quote-machine/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport { useState, useEffect } from 'react';\nimport axios from 'axios';\n\nconst useFetch = (url, initialVal) => {\n  const _useState = useState(initialVal),\n        _useState2 = _slicedToArray(_useState, 2),\n        data = _useState2[0],\n        setData = _useState2[1];\n\n  const _useState3 = useState(false),\n        _useState4 = _slicedToArray(_useState3, 2),\n        loading = _useState4[0],\n        setLoading = _useState4[1];\n\n  useEffect(() => {\n    const fetchData = async function () {\n      try {\n        setLoading(true);\n        const reponse = await axios.get(url);\n\n        if (reponse.status === 200) {\n          setData(response.data);\n        }\n      } catch (error) {\n        throw error;\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    fetchData();\n  }, [url]);\n  return {\n    loading,\n    data\n  };\n};\n\nexport default useFetch;","map":{"version":3,"sources":["/Users/spectrumlighting/Documents/Sites/quote-machine/src/hooks/useQuotes.js"],"names":["useState","useEffect","axios","useFetch","url","initialVal","data","setData","loading","setLoading","fetchData","reponse","get","status","response","error"],"mappings":";AAAA,SAAQA,QAAR,EAAkBC,SAAlB,QAAkC,OAAlC;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,QAAQ,GAAG,CAACC,GAAD,EAAMC,UAAN,KAAqB;AAAA,oBACZL,QAAQ,CAACK,UAAD,CADI;AAAA;AAAA,QAC7BC,IAD6B;AAAA,QACvBC,OADuB;;AAAA,qBAENP,QAAQ,CAAC,KAAD,CAFF;AAAA;AAAA,QAE7BQ,OAF6B;AAAA,QAEpBC,UAFoB;;AAIpCR,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMS,SAAS,GAAG,kBAAiB;AACjC,UAAI;AACFD,QAAAA,UAAU,CAAC,IAAD,CAAV;AACA,cAAME,OAAO,GAAG,MAAMT,KAAK,CAACU,GAAN,CAAUR,GAAV,CAAtB;;AACE,YAAIO,OAAO,CAACE,MAAR,KAAmB,GAAvB,EAA4B;AAC1BN,UAAAA,OAAO,CAACO,QAAQ,CAACR,IAAV,CAAP;AACD;AACJ,OAND,CAME,OAAOS,KAAP,EAAc;AACZ,cAAMA,KAAN;AACH,OARD,SAQU;AACNN,QAAAA,UAAU,CAAC,KAAD,CAAV;AACH;AACF,KAZD;;AAaAC,IAAAA,SAAS;AACV,GAfQ,EAeN,CAACN,GAAD,CAfM,CAAT;AAgBA,SAAO;AAAEI,IAAAA,OAAF;AAAWF,IAAAA;AAAX,GAAP;AACD,CArBD;;AAuBA,eAAeH,QAAf","sourcesContent":["import {useState, useEffect} from 'react'\nimport axios from 'axios'\n\nconst useFetch = (url, initialVal) => {\n  const [data, setData] = useState(initialVal);\n  const [loading, setLoading] = useState(false);\n\n  useEffect(() => {\n    const fetchData = async function() {\n      try {\n        setLoading(true);\n        const reponse = await axios.get(url);\n          if (reponse.status === 200) {\n            setData(response.data);\n          }\n      } catch (error) {\n          throw error;\n      } finally {\n          setLoading(false);\n      }\n    };\n    fetchData();\n  }, [url]);\n  return { loading, data };\n};\n\nexport default useFetch;"]},"metadata":{},"sourceType":"module"}