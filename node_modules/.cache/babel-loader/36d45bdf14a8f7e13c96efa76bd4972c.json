{"ast":null,"code":"import _slicedToArray from \"/Users/spectrumlighting/Documents/Sites/quote-machine/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _taggedTemplateLiteral from \"/Users/spectrumlighting/Documents/Sites/quote-machine/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"/Users/spectrumlighting/Documents/Sites/quote-machine/src/components/QuoteBox.js\";\n\nfunction _templateObject() {\n  const data = _taggedTemplateLiteral([\"\\n\\n\"]);\n\n  _templateObject = function () {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { useState, useEffect, useContext } from 'react';\nimport styled from 'styled-components';\nimport axios from 'axios';\nimport Button from './Button';\nconst StyledQuoteBox = styled.div(_templateObject());\nconst colors = [\"#16a085\", \"#27ae60\", \"#2c3e50\", \"#f39c12\", \"#e74c3c\", \"#9b59b6\", \"#FB6964\", \"#342224\", \"#472E32\", \"#BDBB99\", \"#77B1A9\", \"#73A857\"];\n\nfunction QuoteBox() {\n  const _useState = useState(\"\"),\n        _useState2 = _slicedToArray(_useState, 2),\n        color = _useState2[0],\n        setColor = _useState2[1];\n\n  useEffect(() => {\n    console.log(quote);\n    setColor(colors[Math.floor(Math.random() * 11)]);\n  }, [quote]);\n\n  const nextQuoteClick = () => {\n    console.log('hello');\n  };\n\n  return React.createElement(\"div\", {\n    className: \"QuoteWrapper\",\n    style: {\n      backgroundColor: color\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    id: \"quote-box\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"quote-text\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    id: \"text\",\n    style: {\n      color: color\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, \"\\\"\", quote.quoteText, \"\\\"\")), React.createElement(\"div\", {\n    className: \"quote-author\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    id: \"author\",\n    className: \"font-italic\",\n    style: {\n      color: color\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, \"- \", quote.quoteAuthor)), React.createElement(\"div\", {\n    className: \"buttons\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, React.createElement(\"a\", {\n    className: \"tweet-button\",\n    id: \"tweet-quote\",\n    title: \"Tweet this quote!\",\n    target: \"_blank\",\n    style: {\n      backgroundColor: color\n    },\n    href: 'https://twitter.com/intent/tweet?hashtags=quotes,freecodecamp&related=freecodecamp&text=\"' + quote.quoteText + '\" %0D%0A- ' + quote.quoteAuthor + \"%0D%0A\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, \"Tweet\"), React.createElement(Button, {\n    className: \"new-quote-button\",\n    id: \"new-quote\",\n    style: {\n      backgroundColor: color\n    },\n    buttonDisplayName: \"New Quote\",\n    handleClick: nextQuoteClick,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }))));\n}\n\nexport default QuoteBox;","map":{"version":3,"sources":["/Users/spectrumlighting/Documents/Sites/quote-machine/src/components/QuoteBox.js"],"names":["React","useState","useEffect","useContext","styled","axios","Button","StyledQuoteBox","div","colors","QuoteBox","color","setColor","console","log","quote","Math","floor","random","nextQuoteClick","backgroundColor","quoteText","quoteAuthor"],"mappings":";;;;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,EAAoCC,UAApC,QAAqD,OAArD;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,OAAOC,MAAP,MAAmB,UAAnB;AAEA,MAAMC,cAAc,GAAGH,MAAM,CAACI,GAAV,mBAApB;AAIA,MAAMC,MAAM,GAAG,CACb,SADa,EAEb,SAFa,EAGb,SAHa,EAIb,SAJa,EAKb,SALa,EAMb,SANa,EAOb,SAPa,EAQb,SARa,EASb,SATa,EAUb,SAVa,EAWb,SAXa,EAYb,SAZa,CAAf;;AAeA,SAASC,QAAT,GAAoB;AAAA,oBACQT,QAAQ,CAAC,EAAD,CADhB;AAAA;AAAA,QACXU,KADW;AAAA,QACJC,QADI;;AAGlBV,EAAAA,SAAS,CAAC,MAAM;AACdW,IAAAA,OAAO,CAACC,GAAR,CAAYC,KAAZ;AACAH,IAAAA,QAAQ,CAACH,MAAM,CAACO,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgB,EAA3B,CAAD,CAAP,CAAR;AACD,GAHQ,EAGN,CAACH,KAAD,CAHM,CAAT;;AAKA,QAAMI,cAAc,GAAG,MAAM;AAC3BN,IAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ;AACD,GAFD;;AAIA,SACE;AAAK,IAAA,SAAS,EAAC,cAAf;AAA8B,IAAA,KAAK,EAAE;AAAEM,MAAAA,eAAe,EAAET;AAAnB,KAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,EAAE,EAAC,WAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAG,IAAA,EAAE,EAAC,MAAN;AAAa,IAAA,KAAK,EAAE;AAAEA,MAAAA,KAAK,EAAEA;AAAT,KAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACII,KAAK,CAACM,SADV,OADF,CADF,EAME;AAAK,IAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAM,IAAA,EAAE,EAAC,QAAT;AAAkB,IAAA,SAAS,EAAC,aAA5B;AAA0C,IAAA,KAAK,EAAE;AAAEV,MAAAA,KAAK,EAAEA;AAAT,KAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACKI,KAAK,CAACO,WADX,CADF,CANF,EAWE;AAAK,IAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACA;AACE,IAAA,SAAS,EAAC,cADZ;AAEE,IAAA,EAAE,EAAC,aAFL;AAGE,IAAA,KAAK,EAAC,mBAHR;AAIE,IAAA,MAAM,EAAC,QAJT;AAKE,IAAA,KAAK,EAAE;AAAEF,MAAAA,eAAe,EAAET;AAAnB,KALT;AAME,IAAA,IAAI,EACF,8FACAI,KAAK,CAACM,SADN,GAEA,YAFA,GAGAN,KAAK,CAACO,WAHN,GAIA,QAXJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADA,EAiBA,oBAAC,MAAD;AACE,IAAA,SAAS,EAAC,kBADZ;AAEE,IAAA,EAAE,EAAC,WAFL;AAGE,IAAA,KAAK,EAAE;AAAEF,MAAAA,eAAe,EAAET;AAAnB,KAHT;AAIE,IAAA,iBAAiB,EAAC,WAJpB;AAKE,IAAA,WAAW,EAAEQ,cALf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAjBA,CAXF,CADF,CADF;AAyCD;;AAED,eAAeT,QAAf","sourcesContent":["import React, {useState, useEffect, useContext} from 'react'\nimport styled from 'styled-components'\nimport axios from 'axios'\n\nimport Button from './Button'\n\nconst StyledQuoteBox = styled.div`\n\n`;\n\nconst colors = [\n  \"#16a085\",\n  \"#27ae60\",\n  \"#2c3e50\",\n  \"#f39c12\",\n  \"#e74c3c\",\n  \"#9b59b6\",\n  \"#FB6964\",\n  \"#342224\",\n  \"#472E32\",\n  \"#BDBB99\",\n  \"#77B1A9\",\n  \"#73A857\"\n]\n\nfunction QuoteBox() {\n  const [color, setColor] = useState(\"\")\n\n  useEffect(() => {\n    console.log(quote)\n    setColor(colors[Math.floor(Math.random() * 11)]);\n  }, [quote])\n\n  const nextQuoteClick = () => {\n    console.log('hello')\n  }\n\n  return (\n    <div className='QuoteWrapper' style={{ backgroundColor: color }}>\n      <div id='quote-box'>\n        <div className='quote-text'>\n          <p id='text' style={{ color: color }}>\n            \"{quote.quoteText}\"\n          </p>\n        </div>\n        <div className='quote-author'>\n          <span id='author' className='font-italic' style={{ color: color }}>\n            - {quote.quoteAuthor}\n          </span>\n        </div>\n        <div className='buttons'>\n        <a\n          className='tweet-button'\n          id='tweet-quote'\n          title='Tweet this quote!'\n          target='_blank'\n          style={{ backgroundColor: color }}\n          href={\n            'https://twitter.com/intent/tweet?hashtags=quotes,freecodecamp&related=freecodecamp&text=\"' +\n            quote.quoteText +\n            '\" %0D%0A- ' +\n            quote.quoteAuthor +\n            \"%0D%0A\"\n          }\n        >\n          Tweet\n        </a>\n        <Button\n          className='new-quote-button'\n          id='new-quote'\n          style={{ backgroundColor: color }} \n          buttonDisplayName=\"New Quote\" \n          handleClick={nextQuoteClick} \n        />\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default QuoteBox"]},"metadata":{},"sourceType":"module"}